#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import platform
import subprocess
from tkinter import Tk
from tkinter import dialog


def ask(title, text, strings=('Yes', 'No'), bitmap='warning', default=0):
    """ Making a dialog windows.

    Args:
        title (str): Title of the windows
        text (str): Text to be show to the user
        strings (tuple, optional): Button strings to be shown. Defaults to ('Yes', 'No').
        bitmap (str, optional): Bitmap to use for the icon. Defaults to 'warning'.
        default (int, optional): Index of the default button. Defaults to 0.  
    Returns:
        [type]: [description]
    """

    d = dialog.Dialog(title=title,
                      text=text,
                      bitmap=bitmap,
                      default=default,
                      strings=strings)
    return d.num


if __name__ == '__main__':
    title = sys.argv[1]
    text = sys.argv[2]
    options = sys.argv[3].strip().split("/")

    longOptions = []
    if len(sys.argv) >= 5:
        longOptions = [l.strip() for l in sys.argv[4:]]

    # Fill up the long options if not given
    if len(longOptions) < len(options):
        longOptions += options[len(longOptions):]

    default = 0
    for idx, o in enumerate(options):
        if o.isupper():
            default = idx

    root = Tk()
    root.lift()
    root.attributes('-topmost', True)
    root.after_idle(root.attributes, '-topmost', False)
    root.withdraw()

    # Front most Hack for OS X
    if 'Darwin' in platform.system():  # How Mac OS X is identified by Python
        p = subprocess.Popen(
            '''sleep 0.3 && /usr/bin/osascript -e 'tell app "Finder" to set frontmost of process "python" to true' ''',
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT)

    numButton = ask(title, text, longOptions, default=default)

    print(options[numButton])
